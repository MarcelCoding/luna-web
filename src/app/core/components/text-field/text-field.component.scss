@import 'vars';

$background-color: $gray;
$border-width: $cube * 2;
$padding-side: $cube * 10;

:host {
  position: relative; // label is absolute: to this element
  display: flex;
  width: 100%;
  border: $border-width solid transparent;
  margin-bottom: $cube * 10;
  background-color: $background-color;
  border-radius: $cube * 7;
  cursor: text;
  transition: border-color 150ms ease-in-out;

  @media print {
    margin: 0;
    background-color: transparent;
  }

  &:focus-within {
    border-color: $primary;
    color: $text-color;
  }

  ::ng-deep label {
    position: absolute;
    // 57px = textfield height, 18.4 = label height
    margin-top: ($cube * 57 - $cube * 18.4) / 2;
    margin-left: $padding-side + $border-width;
    pointer-events: none;
    transform-origin: left;
    transition: transform 250ms ease-in-out;

    @media print {
      margin-left: 0;
      transform: translateY($cube * -10) scale(0.95);
    }
  }

  ::ng-deep textarea[appTextFieldRef] {
    resize: vertical;
  }

  ::ng-deep [appTextFieldRef] {
    width: 100%;
    border-width: 0;
    margin: $cube * 25 $padding-side $cube * 5;
    background-color: transparent;
    opacity: 0;
    outline: none;
    transition: opacity 150ms ease-in-out;

    @media print {
      margin-left: 0;
    }
  }

  &:not(.empty)::ng-deep [appTextFieldRef], ::ng-deep [appTextFieldRef]:focus {
    opacity: 1;
  }

  &:not(.empty) ::ng-deep label, ::ng-deep [appTextFieldRef]:focus + label {
    transform: translateY($cube * -10) scale(0.95);
  }

  ::ng-deep app-autocomplete {
    position: absolute;
    top: calc(100% + #{$border-width});
  }

  &.error {
    border-color: $red-dark;
  }
}
